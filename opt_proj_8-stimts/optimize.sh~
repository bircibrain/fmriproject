#!/bin/bash
#the number of iterations
N=10
echo "" > results.txt
echo "iter stimEff contrastEff seed"
#TODO: start a loop in i from 1 to $N
for i in `seq $N`; do 
	#portable method of getting a random number
	seed=$RANDOM

	#TODO: RSFgen command
	#use -seed $seed
	#-prefix rsf.${i}.

	RSFgen \
	-nt 500 \
	-num_stimts 8 \
	-nreps 1 40 \
	-nreps 2 40 \
	-nreps 3 40 \
	-nreps 4 40 \
	-nreps 5 40 \
	-nreps 6 40 \
	-nreps 7 120 \
	-nreps 8 40 \
	-seed ${seed} -prefix rsf.${i}.

	#TODO: make_stim_times.py command
	#use prefix stim.${i}

	make_stim_times.py \
	-files rsf.${i}.*.1D \
	-prefix stim.${i} \
	-nt 500 \
	-tr 2 \
	-nruns 1

	#TODO: 3dDeconvolve command
	#pipe the output to efficiency.${i}.txt

	3dDeconvolve \
	-nodata 500 2 \
	-polort 4 \
	-num_stimts 8 \
	-stim_times 1 stim.${i}.01.1D 'GAM' \
	-stim_label 1 'A' \
	-stim_times 2 stim.${i}.02.1D 'GAM' \
	-stim_label 2 'B' \
	-stim_times 3 stim.${i}.03.1D 'GAM' \
	-stim_label 3 'C' \
	-stim_times 4 stim.${i}.04.1D 'GAM' \
	-stim_label 4 'D' \
	-stim_times 5 stim.${i}.05.1D 'GAM' \
	-stim_label 5 'E' \
	-stim_times 6 stim.${i}.06.1D 'GAM' \
	-stim_label 6 'F' \
	-stim_times 7 stim.${i}.07.1D 'GAM' \
	-stim_label 7 'G' \
	-stim_times 8 stim.${i}.08.1D 'GAM' \
	-stim_label 8 'H' \
	-gltsym "SYM: .33*A .33*B .33*C -G" > efficiency.${i}.txt

	eff=`./efficiency_parser.py efficiency.${i}.txt`

	echo "$i $eff $seed" >> results.txt

#end loop
done
